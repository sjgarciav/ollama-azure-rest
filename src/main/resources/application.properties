spring.application.name=ollamarestapi
spring.ai.ollama.chat.model=mistral

azure.apiToken=your_azure_api_token_here
azure.apiUrl=https://dev.azure.com/javygarcia
azure.project=DevOpsCourse

prompt.testCases=Act as a Quality Analyst. Based on the following acceptance criteria, generate in json format: detailed test cases with Test Case ID, Steps, Test Data, Test Case Description, and Expected Result. Consider this json example: [{\"Test Case ID\": \"TC1\", \"Steps\": [\"Step 1\", \"Step 2\"], \"Test Data\": \"test data\", \"Test Case Description\": \"Test case description 1\", \"Expected Result\": \"Result 1\"}, {\"Test Case ID\": \"TC2\", \"Steps\": [\"Step1\", \"Step2\"], \"Test Data\": {\"testdata1\": \"test data 1\", \"testdata2\": \"test data 2\"}, \"Test Case Description\": \"Test case description 2\", \"Expected Result\": \"Result2\"}]\n\n
prompt.aCRecommendations=Act as a Quality Analyst. Based on the following acceptance criteria of a user story, generate in plain text format: detailed misunderstanding, incompleteness ,contradictions, and a proposal of the fixed acceptance criteria considering the identified misunderstanding, incompleteness and contradictions. On the proposal, include the old acceptance criteria and the new acceptance criteria, so it is easier to see the changed parts. After that, generate in json format the proposal of the description, considet this example, put all the descripion only on in the field System.Description, no more fields are neded:  [{\"op\":\"replace\",\"path\":\"/fields/System.Description\",\"value\":\"This is the new description\"}]  \n\n